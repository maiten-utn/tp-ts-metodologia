// 游늷 Diferencia entre `interface` y `type` en TypeScript:
//
// - Ambos se usan para definir la forma de un objeto o estructura de datos.
// - `interface` est치 pensado espec칤ficamente para describir la forma de objetos y puede extenderse f치cilmente.
// - `type` es m치s flexible: puede representar uniones, primitivas, funciones, y m치s.
// - Si solo vas a definir la forma de un objeto, `interface` suele ser preferido.
// - Si necesitas tipos complejos (como uniones o funciones), `type` es m치s adecuado.

export interface UsuarioInterface {
  id: number
  nombre: string
  edad: number
  email: string
  activo: boolean
}

export type UsuarioType = {
  id: number
  nombre: string
  edad: number
  email: string
  activo: boolean
}
